//===------------------ DLangDemangleTest.cpp -----------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#include "llvm/Demangle/Demangle.h"
#include "gmock/gmock.h"
#include "gtest/gtest.h"

#include <cstdlib>
#include <utility>

struct DLangDemangleTestFixture
    : public testing::TestWithParam<std::pair<const char *, const char *>> {
  char *Demangled;

  void SetUp() override { Demangled = llvm::dlangDemangle(GetParam().first); }

  void TearDown() override { std::free(Demangled); }
};

TEST_P(DLangDemangleTestFixture, DLangDemangleTest) {
  EXPECT_STREQ(Demangled, GetParam().second);
}

INSTANTIATE_TEST_SUITE_P(
    DLangDemangleTest, DLangDemangleTestFixture,
    testing::Values(
        std::make_pair("_Dmain", "D main"), std::make_pair(nullptr, nullptr),
        std::make_pair("_Z", nullptr), std::make_pair("_DDD", nullptr),
        std::make_pair("_D88", nullptr),
        std::make_pair("_D8demangleZ", "demangle"),
        std::make_pair("_D8demangle4testZ", "demangle.test"),
        std::make_pair("_D8demangle4test5test2Z", "demangle.test.test2"),
        std::make_pair("_D8demangle9anonymous0Z", "demangle.anonymous"),
        std::make_pair("_D8demangle9anonymous03fooZ", "demangle.anonymous.foo"),
        std::make_pair("_D8demangle4test6__initZ",
                       "initializer for demangle.test"),
        std::make_pair("_D8demangle4test6__vtblZ", "vtable for demangle.test"),
        std::make_pair("_D8demangle4test7__ClassZ",
                       "ClassInfo for demangle.test"),
        std::make_pair("_D8demangle4test11__InterfaceZ",
                       "Interface for demangle.test"),
        std::make_pair("_D8demangle4test12__ModuleInfoZ",
                       "ModuleInfo for demangle.test"),
        std::make_pair("_D8demangle4test6__ctorMFZv", "demangle.test.this()"),
        std::make_pair("_D8demangle4test6__dtorMFZv", "demangle.test.~this()"),
        std::make_pair("_D8demangle4test10__postblitMFZv",
                       "demangle.test.this(this)"),
        std::make_pair("_D8demangle4__S14testZ", "demangle.test"),
        std::make_pair("_D8demangle4__Sd4testZ", "demangle.__Sd.test"),
        std::make_pair("_D8demangle1ii", "demangle.i"),
        std::make_pair("_D8demangle2siOi", "demangle.si"),
        std::make_pair("_D8demangle1re", "demangle.r"),
        std::make_pair("_D8demangle1iinvalidtypeseq", nullptr),
        std::make_pair("_D8demangle3ABCQeQg1ai", "demangle.ABC.ABC.ABC.a"),
        std::make_pair("_D8demangle3ABCQeQaaaa1ai", nullptr),
        std::make_pair("_D8demangle4ABCiQfQh1aQh", "demangle.ABCi.ABCi.ABCi.a"),
        std::make_pair("_D8demangle4ABCiQfQh1aQaaa", nullptr),
        std::make_pair("_D8demangle4testPFLAiYi", "demangle.test"),
        std::make_pair("_D8demangle4testFaZv", "demangle.test(char)"),
        std::make_pair("_D8demangle4testFbZv", "demangle.test(bool)"),
        std::make_pair("_D8demangle4testFcZv", "demangle.test(creal)"),
        std::make_pair("_D8demangle4testFdZv", "demangle.test(double)"),
        std::make_pair("_D8demangle4testFeZv", "demangle.test(real)"),
        std::make_pair("_D8demangle4testFfZv", "demangle.test(float)"),
        std::make_pair("_D8demangle4testFgZv", "demangle.test(byte)"),
        std::make_pair("_D8demangle4testFhZv", "demangle.test(ubyte)"),
        std::make_pair("_D8demangle4testFiZv", "demangle.test(int)"),
        std::make_pair("_D8demangle4testFjZv", "demangle.test(ireal)"),
        std::make_pair("_D8demangle4testFkZv", "demangle.test(uint)"),
        std::make_pair("_D8demangle4testFlZv", "demangle.test(long)"),
        std::make_pair("_D8demangle4testFmZv", "demangle.test(ulong)"),
        std::make_pair("_D8demangle4testFZv", "demangle.test()"),
        std::make_pair("_D8demangle4testMFZ2fnMFZv", "demangle.test().fn()"),
        std::make_pair("_D8demangle4testFnZv", "demangle.test(typeof(null))"),
        std::make_pair("_D8demangle4testFNnZv", "demangle.test(typeof(*null))"),
        std::make_pair("_D8demangle4testFoZv", "demangle.test(ifloat)"),
        std::make_pair("_D8demangle4testFpZv", "demangle.test(idouble)"),
        std::make_pair("_D8demangle4testFqZv", "demangle.test(cfloat)"),
        std::make_pair("_D8demangle4testFrZv", "demangle.test(cdouble)"),
        std::make_pair("_D8demangle4testFsZv", "demangle.test(short)"),
        std::make_pair("_D8demangle4testFtZv", "demangle.test(ushort)"),
        std::make_pair("_D8demangle4testFuZv", "demangle.test(wchar)"),
        std::make_pair("_D8demangle4testFvZv", "demangle.test(void)"),
        std::make_pair("_D8demangle4testFwZv", "demangle.test(dchar)"),
        std::make_pair("_D8demangle4testFziZv", "demangle.test(cent)"),
        std::make_pair("_D8demangle4testFzkZv", "demangle.test(ucent)"),
        std::make_pair("_D8demangle4testFOaZv", "demangle.test(shared(char))"),
        std::make_pair("_D8demangle4testFxaZv", "demangle.test(const(char))"),
        std::make_pair("_D8demangle4testFyaZv",
                       "demangle.test(immutable(char))"),
        std::make_pair("_D8demangle4testFNgaZv", "demangle.test(inout(char))"),
        std::make_pair("_D8demangle4testFOxaZv",
                       "demangle.test(shared(const(char)))"),
        std::make_pair("_D8demangle4testFONgaZv",
                       "demangle.test(shared(inout(char)))"),
        std::make_pair("_D8demangle4testFAaZv", "demangle.test(char[])"),
        std::make_pair("_D8demangle4testFAAaZv", "demangle.test(char[][])"),
        std::make_pair("_D8demangle4testFAAAaZv", "demangle.test(char[][][])"),
        std::make_pair("_D8demangle4testFHaaZv", "demangle.test(char[char])"),
        std::make_pair("_D8demangle4testFHHaaaZv",
                       "demangle.test(char[char[char]])"),
        std::make_pair("_D8demangle4testFPaZv", "demangle.test(char*)"),
        std::make_pair("_D8demangle4testFPPaZv", "demangle.test(char**)"),
        std::make_pair("_D8demangle4testFPPPaZv", "demangle.test(char***)"),
        std::make_pair("_D8demangle4testFG42aZv", "demangle.test(char[42])"),
        std::make_pair("_D8demangle4testFG42G42aZv",
                       "demangle.test(char[42][42])"),
        std::make_pair("_D8demangle4testFG42G42G42aZv",
                       "demangle.test(char[42][42][42])"),
        std::make_pair("_D8demangle4testFG1234567890aZv",
                       "demangle.test(char[1234567890])"),
        std::make_pair("_D8demangle4testFNhG8gZv",
                       "demangle.test(__vector(byte[8]))"),
        std::make_pair("_D8demangle4testFNhG16gZv",
                       "demangle.test(__vector(byte[16]))"),
        std::make_pair("_D8demangle4testFNhG32gZv",
                       "demangle.test(__vector(byte[32]))"),
        std::make_pair("_D8demangle4testFNhG4sZv",
                       "demangle.test(__vector(short[4]))"),
        std::make_pair("_D8demangle4testFNhG8sZv",
                       "demangle.test(__vector(short[8]))"),
        std::make_pair("_D8demangle4testFNhG16sZv",
                       "demangle.test(__vector(short[16]))"),
        std::make_pair("_D8demangle4testFNhG2iZv",
                       "demangle.test(__vector(int[2]))"),
        std::make_pair("_D8demangle4testFNhG4iZv",
                       "demangle.test(__vector(int[4]))"),
        std::make_pair("_D8demangle4testFNhG8iZv",
                       "demangle.test(__vector(int[8]))"),
        std::make_pair("_D8demangle4testFNhG1lZv",
                       "demangle.test(__vector(long[1]))"),
        std::make_pair("_D8demangle4testFNhG2lZv",
                       "demangle.test(__vector(long[2]))"),
        std::make_pair("_D8demangle4testFNhG4lZv",
                       "demangle.test(__vector(long[4]))"),
        std::make_pair("_D8demangle4testFNhG2fZv",
                       "demangle.test(__vector(float[2]))"),
        std::make_pair("_D8demangle4testFNhG4fZv",
                       "demangle.test(__vector(float[4]))"),
        std::make_pair("_D8demangle4testFNhG8fZv",
                       "demangle.test(__vector(float[8]))"),
        std::make_pair("_D8demangle4testFNhG1dZv",
                       "demangle.test(__vector(double[1]))"),
        std::make_pair("_D8demangle4testFNhG2dZv",
                       "demangle.test(__vector(double[2]))"),
        std::make_pair("_D8demangle4testFNhG4dZv",
                       "demangle.test(__vector(double[4]))"),
        std::make_pair("_D8demangle4testFC5classZv", "demangle.test(class)"),
        std::make_pair("_D8demangle4testFC5class4testZv",
                       "demangle.test(class.test)"),
        std::make_pair("_D8demangle4testFS6structZv", "demangle.test(struct)"),
        std::make_pair("_D8demangle4testFS6struct4testZv",
                       "demangle.test(struct.test)"),
        std::make_pair("_D8demangle4testFE4enumZv", "demangle.test(enum)"),
        std::make_pair("_D8demangle4testFE4enum4testZv",
                       "demangle.test(enum.test)"),
        std::make_pair("_D8demangle4testFT7typedefZv",
                       "demangle.test(typedef)"),
        std::make_pair("_D8demangle4testFT7typedef4testZv",
                       "demangle.test(typedef.test)"),
        std::make_pair("_D8demangle4testFIaZv", "demangle.test(in char)"),
        std::make_pair("_D8demangle4testFIKaZv", "demangle.test(in ref char)"),
        std::make_pair("_D8demangle4testFJaZv", "demangle.test(out char)"),
        std::make_pair("_D8demangle4testFKaZv", "demangle.test(ref char)"),
        std::make_pair("_D8demangle4testFLaZv", "demangle.test(lazy char)"),
        std::make_pair("_D8demangle4testFMaZv", "demangle.test(scope char)"),
        std::make_pair("_D8demangle4testFNjaZv", "demangle.test(char)"),
        std::make_pair("_D8demangle4testFNkaZv", "demangle.test(return char)"),
        std::make_pair("_D8demangle4testFNlaZv", "demangle.test(char)"),
        std::make_pair("_D8demangle4testFaXv", "demangle.test(char...)"),
        std::make_pair("_D8demangle4testFaYv", "demangle.test(char, ...)"),
        std::make_pair("_D8demangle4testFaaYv",
                       "demangle.test(char, char, ...)"),
        std::make_pair("_D8demangle4testFXv", "demangle.test(...)"),
        std::make_pair("_D8demangle4testFYv", "demangle.test(, ...)"),
        std::make_pair("_D8demangle4testFaaZv", "demangle.test(char, char)")));
